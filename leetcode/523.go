package main
import (
	"fmt"
)

func main() {
	//r := checkSubarraySum([]int{251,115,295,209,357,460,251,298,496,178,273,55,361,429,275,113,120,86,367,249,446,293,461,429,330,137,399,448,260,503,259,195,70,417,163,281,93,243,152,321,276,215,163,235,475,346,14,371,307,131,457,343,420,129,387,394,202,314,420,353,468,64,375,7,113,287,364,405,78,524,431,430,119,349,422,37,126,369,474,279,90,484,218,267,279,113,34,133,353,419,443,483,418,392,342,512,96,407,432,51,402,474,287,75,454,105,108,72,512,292,139,125,63,318,378,467,98,241,437,481,365,493,417,190,188,500,169,196,67,91,200,247,221,3,260,345,212,37,381,468,382,392,463,169,493,369,235,465,97,342,37,159,84,521,9,410,123,170,365,24,462,138,20,112,510,92,309,16,373,362,58,414,247,329,4,62,305,181,85,508,347,139,85,143,507,18,61,371,196,449,116,428,438,359,420,56,396,151,246,427,257,208,185,78,468,442,272,437,245,362,216,123,25,366,6,250,152,250,517,467,53,303,50,161,221,29,519,347,3,101,342,439,118,43,212,66,383,420,397,35,1,7,491,478,440,241,467,423,508,376,118,306,116,421,262,467,217,369,428,123,301,49,220,491,428,395,440,195,190,398,135,49,360,512,34,349,479,382,256,251,200,486,31,284,222,70,349,4,365,127,490,17,212,468,173,372,384,399,65,301,390,365,381,414,152,145,517,221,300,509,150,4,484,232,455,171,25,26,468,210,223,216,231,140,218,513,385,212,341,508,414,30,479,470,71,72,51,121,22,143,432,204,454,479,97,253,394,328,366,239,512,495,486,338,491,51,61,372,480,359,490,311,458,87,141,107,464,15,44,58,239,57,92,266,290,504,25,116,513,324,171,488,453,182,456,116,318,334,411,444,107,407,125,126,24,476,382,285,58,435,235,519,377,123,174,272,515,30,154,249,185,31,265,258,471,31,201,368,309,203,150,13,334,264,310,223,250,356,42,220,60,210,358,54,93,254,240,295,31,123,503,518,235,463,326,102,97,94,34,244,394,132,346,250,228,88,271,341,118,336,292,428,151,18,263,259,234,193,430,484,461,357,112,293,431,64,498,518,434,356,352,206,273,23,35,374,69,48,352,292,121,496,242,438,120,27,90,14,507,128,53,255,177,407,41,249,357,515,12,399,49,80,192,403,496,156,42,314,329,389,480,452,458,87,440,123,167,102,8,278,141,244,167,523,462,175,348,295,278,243,115,286,343,47,167,39,250,34,134,85,24,17,148,177,107,459,283,239,422,198,128,156,322,254,98,365,240,286,510,43,174,474,99,78,169,80,195,267,392,31,83,304,83,237,503,221,434,367,522,417,353,128,64,234,411,282,202,299,360,25,353,203,487,37,433,346,371,38,391,499,354,3,272,255,122,245,262,230,8,47,184,307,286,333,276,467,239,490,166,159,312,353,152,201,380,196,463,30,485,252,508,287,278,390,405,248,392,31,102,46,298,471,432,246,180,423,78,162,162,40,250,247,145,523,96,258,25,355,510,72,198,206,357,391,446,438,299,217,140,88,353,376,280,345,120,360,273,219,507,437,101,406,225,369,173,449,62,443,60,482,209,109,360,143,5,14,230,479,393,302,47,379,353,110,199,508,491,358,134,347,254,525,237,406,19,269,162,217,456,8,457,182,117,192,520,445,161,107,30,191,353,128,261,521,342,522,136,204,116,397,522,97,521,223,450,265,43,424,490,183,243,71,83,445,107,38,324,346,245,261,454,323,281,325,143,294,171,450,326,207,338,401,177,490,81,371,373,395,75,261,372,149,385,354,133,188,105,242,116,114,79,82,165,488,192,120,498,175,227,449,79,397,416,174,155,195,463,324,96,354,142,495,373,468,289,3,259,417,21,493,342,520,349,291,48,490,429,156,158,373,409,173,159,107,280,93,219,56,315,260,76,219,198,175,93,137,118,514,50,517,19,15,266,519,38,501,115,134,153,361,22,277,142,128,442,44,480,522,151,8,502,421,523,296,361,411,267,182,112,101,489,498,506,491,291,116,380,457,70,450,375,350,103,367,318,491,205,515,284,29,60,196,41,317,374,152,345,78,219,3,487,498,51,331,12,73,413,380,477,242,456,322,403,274,498,407,438,233,261,331,13,114,190,231,196,310,366,228,114,24,351,346,261,224,329,157,419,267,17,446,279,118,99,452,251,328,377,156,356,128,138,482,112,244,299,194,266,204,322,370,155,355,483,415,120,256,397,443,431,61,70,502,275,278,438,343,343,61,374,210}, 253)
	r := checkSubarraySum([]int{23,2,6,4,7}, 13)
	fmt.Println(r)
}

//同余定理 + 哈希表 + 前缀和
//前缀和：preSum[i]表示从0到i的元素和。 那么i~j的元素和就是preSum[j]-preSum[i]
//同余定理：如果preSum[j]-preSum[i]是k的倍数，那么preSum[j]%k == preSum[i]%k
//所以需要记录每一个 preSum[i]%k的值，哈希表的key是preSum[i]%k，value就是下标i。
//不断循环时，哈希表中存在，则找到，不存在就写入哈希表。找到是需要判断j-i是不是大于等于2
func checkSubarraySum(nums []int, k int) bool {
	if len(nums) < 2{
		return false
	}
	mp := map[int]int{0:-1}
	remainder := 0
	for i, num := range nums{
		remainder = (remainder + num) % k
		if prevIndex, has := mp[remainder]; has{
			if i - prevIndex >= 2{
				return true
			}
		}else{
			mp[remainder] = i
		}
	}
	return false
}

//递归+剪枝 - 超时
var cache = map[string]interface{}{}
func checkSubarraySum_recursion(nums []int, k int) bool {
	cache = make(map[string]interface{})
	n := len(nums)
	sum := 0
	for i:=0; i<n; i++{
		sum += nums[i]
	}
	if recursion(nums, k, n, sum, 0, n-1){
		return true
	}
	return false
}

func recursion(nums []int, k, n, sum int, offsetMin, offsetMax int)bool{
	if n < 2{
		return false
	}
	if sum % k == 0{
		return true
	}
	if _, ok := cache[getUniqKey(offsetMin, offsetMax)]; ok{
		return false
	}
	cache[getUniqKey(offsetMin, offsetMax)] = nil
	if recursion(nums[:n-1], k, n-1, sum-nums[n-1], offsetMin, offsetMax-1){
		return true
	}else if recursion(nums[1:], k, n-1, sum-nums[0], offsetMin+1, offsetMax){
		return true
	}
	return false
}

func getUniqKey(left, right int)string{
	return fmt.Sprintf("%d-%d", left, right)
}

//暴力法 - 超时
func checkSubarraySum_violence(nums []int, k int) bool {
	n := len(nums)
	for i:=0; i<n; i++{
		sum := nums[i]
		for j:=i+1; j<n; j++{
			sum += nums[j]
			if sum % k == 0{
				return true
			}
		}
	}
	return false
}
